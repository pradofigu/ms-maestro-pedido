name: Pipeline CI

on:
  workflow_call:
    inputs:       
      stage:
        required: true
        type: string        

env:
  STAGE: ${{ inputs.stage }}
  AWS_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
  AWS_SECRET_KEY: ${{ secrets.SECRET_KEY }}  
  
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}   
          
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Unit Test
        working-directory: OrderService/tests/OrderService.UnitTests
        run: dotnet test --no-restore --verbosity minimal
      - name: Functional Test
        working-directory: OrderService/tests/OrderService.FunctionalTests
        run: dotnet test --no-restore --verbosity minimal
      - name: Integration Test
        working-directory: OrderService/tests/OrderService.IntegrationTests
        run: dotnet test --no-restore --verbosity minimal
        
  scan-sonar:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Debug SonarCloud Scanner Installation
        run: ls -R .sonar/scanner
      - name: Install dependencies
        run: dotnet restore
      - name: Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"pradofigu_ms-maestro-pedido" /o:"pradofigu" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet test OrderService\tests\OrderService.UnitTests\ --no-restore --verbosity minimal
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"